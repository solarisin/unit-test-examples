name: msbuild-vstest-ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FOLDER: ./ms-cpp-unit-test/

permissions:
  contents: read
  checks: write
  
jobs:
  build:
    runs-on: windows-latest
    #runs-on: [self-hosted, windows, x64]

    strategy:
      matrix:
        configuration: [Release] # [Release, Debug]
        platform: [x64] # [x64, x86]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    # This takes forever on github hosted runners for some reason, even though this solution has no nuget packages
    # disable for now
    #- name: Restore NuGet packages
    #  run: nuget restore ${{env.SOLUTION_FOLDER}}

    # execute msbuild for the specified configuration and platform
    - name: MSBuild
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{matrix.configuration}} /p:Platform=${{matrix.platform}} ${{env.SOLUTION_FOLDER}}

    # run vstest on all generated test dlls
    - name: Run tests
      uses: microsoft/vstest-action@v0.1.0
      id: vstest
      with:
        testAssembly: '*-test.dll'
        searchFolder: ${{env.SOLUTION_FOLDER}}test/ms-cpp-unit-test/bin/${{matrix.configuration}}/${{matrix.platform}}/
        runSettingsFile: ${{env.SOLUTION_FOLDER}}test/ms-cpp-unit-test/ms-cpp-unit-test.runsettings
        
    # Parse trx files
    - name: Parse Trx files
      uses: solarisin/trx-parser@dev2
      id: trx-parser
      with:
        TRX_PATH: ./TestResults
        REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BADGE_STYLE: emoji
